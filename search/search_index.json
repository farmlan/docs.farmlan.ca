{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stemmer","stopWordFilter","trimmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> Outer Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Inner Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"tech-stack-analysis/Reproducibility/","title":"Reproducibility","text":"<p>This section will provide an overview of each option's reproducibility. We will look at automation potentials and standardization.</p>"},{"location":"tech-stack-analysis/Reproducibility/#automation-potential","title":"Automation potential","text":""},{"location":"tech-stack-analysis/Reproducibility/#bare-metal-deployment","title":"Bare-metal deployment","text":"<p>Both AlmaLinux and Proxmox offer ways of an unattended installs on bare-metal. </p>"},{"location":"tech-stack-analysis/Reproducibility/#almalinux","title":"AlmaLinux","text":"<p>AlmaLinux utilizes kickstart files, which can be hosted by NFS, FTP, HTTP, HTTPS, or a directly by creating a custom ISO.</p>"},{"location":"tech-stack-analysis/Reproducibility/#proxmox","title":"Proxmox","text":"<p>Proxmox utilizes answer files which can be fetched via HTTP or directly by creating a custom ISO. </p> Note <p>This would really only come into play if one of the hosts goes down and needs to be redeployed during the event.</p>"},{"location":"tech-stack-analysis/Reproducibility/#post-deployment-configuration","title":"Post deployment configuration","text":""},{"location":"tech-stack-analysis/Reproducibility/#almalinux_1","title":"AlmaLinux","text":"<p>AlmaLinux can be managed by cli, bash, python, ansible and many others. The method of choice would be ansible due to the amount of community resources and built in idempotency.</p>"},{"location":"tech-stack-analysis/Reproducibility/#proxmox_1","title":"Proxmox","text":"<p>Proxmox can be managed by anything that can interact with an API. There is an ansible collection for Proxmox and community made helper scripts to assist with deploying VMs and LXCs.</p>"},{"location":"tech-stack-analysis/Reproducibility/#standardization","title":"Standardization","text":""},{"location":"tech-stack-analysis/Reproducibility/#almalinux_2","title":"AlmaLinux","text":"<p>Utilizing configuration as code (CaC) with Ansible to manage packages, compose files, server config files, and containers standardization is easily achievable.</p>"},{"location":"tech-stack-analysis/Reproducibility/#proxmox_2","title":"Proxmox","text":"<p>Achieving standardization with Proxmox seems a little more difficult. A mixture of Bash and Ansible could be utilized.</p>"}]}